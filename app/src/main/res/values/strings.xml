<resources>
    <string name="app_name">QwikScan</string>
    <string name="store_name">TESCO</string>
    <string name="signed_in_fmt">Signed in as: %s</string>
    <string name="logout">Logout</string>
    <string name="disconnect">Disconnect</string>
    <string name="loading">Loading…</string>
    <string name="data">Data</string>
    <string name="scan">Start Scanning</string>
    <string name="go">Go</string>
    <string name="action_refresh">Refresh</string>
    <string name="product_name">Product Name</string>
    <string name="product_price">Price</string>
    <string name="quantity">Quantity</string>
    <string name="product_details">Product Details</string>
    <string name="proceed">Proceed</string>
    <string name="total">Total</string>
    <string name="delete">Press and Hold on an item to remove</string>
    <string name="android_pay_button">Android Pay</string>
    <string name="paypal_button">PayPal</string>
    <string name="cash_card_button">Cash/Card</string>
    <string name="payment_method">Payment Method</string>
    <string name="error_message">Oops! Something went wrong!</string>
    <string name="message">Your order details are as follows:</string>
    <string name="welcome">The all-new TESCO self-scanner</string>
    <string name="gmail">Sign in with Gmail and get started</string>

    <string name="paypal_upper">Normally this button would bring up an activity to prompt you to tap your device off of the teller’s contactless terminal to complete your purchase. Unfortunately, as of now (November 2016) PayPals V.Zero service isn’t available to use in Ireland. Unlike with android pay though, it is possible to test this payment method, using a sandbox account to make test payments. This issue is that by the nature of how the system works, we would have to run a dedicated server in order to complete the transaction.

This is not really a viable option as we do not have the means to run a dedicated server to run the server service, but I can explain how the system works.

Unlike android pay, the client payment service is integrated into the app itself, as opposed to being a separate app in itself. this makes it easier from a development perspective, as we can integrate the client service straight into the app. This diagram briefly shows how the payment flow works:
</string>
    <string name="paypal_lower">The process starts with the client front end. The client requests to make a purchase and sends a request to the merchant’s server to pass a token to make a transaction request to the main BrainTree server. BrainTree is the backend that processes the payments, it was a company that is owned by PayPal and the BrainTree service can be used to process android pay payments also. The client then sends the token that it received from the merchant server to the BrainTree server and the BrainTree server sends back a payment method nonce. The payment method nonce is a string that represents a payment method, this is generated by the BrainTree payment server and is passed back to the client, to pass to the merchant’s server to instruct them of how to make the transaction using the client’s information, passed in the payment nonce. Once the payment nonce is returned to the client, the client then passes it to the merchant server. The merchant server than uses the nonce with the server sdk to create a transaction or perform other behaviour’s with the BrainTree server.

Ref: https://developer.paypal.com/docs/accept-payments/express-checkout/ec-vzero/get-started/
</string>
    <string name="android_upper">Normally this button would prompt the user to tap there phone on the tellers contactless machine and the android pay app would open (if installed on the device) when it has been tapped and the payment would made. We were planning on implementing android pay into the checkout payment system for our app, but because of the nature of android pay and how it works, it is impossible to demonstrate how it works without using a valid card supported by a participating bank.
  As of now (November 2016) there are currently not banks supporting the use of android pay with their credit or debit cards, and as there is no way of creating fake cards to test the android pay functionality, it would be irrelevant to put code into the app that can’t be tested to be working. What I can do instead is give a brief description of how android pay works.

  Android pay is a contactless payment method, it uses a practice known as tokenisation to make secure transfers. This means that upon purchasing an item, the merchant is never passed your credit card details but they are given the encrypted credentials that are stored in your google wallet account.</string>
    <string name="android_lower">When a card is added to your android pay account a token is generated, this token is generated by the bank that issued the card. This means that upon payment, the merchant dose not request the customers card details, but they request a token to be able to verify with the bank that this card is indeed a valid form of payment. Once the teller receives the token via NFC, the token is then processed by the acquirers’ bank and the credit card provider i.e. Visa, MasterCard. The TSP (Token service provider) then verifies the token and passes the customers credit card number back to the appropriate payment network i.e. Visa, who then passes the card number to the customers bank to verify the use of the card. Once the customers bank is satisfied with the information, they send an authorisation response to the payment network, who then passes it to the aquirers’ bank who then sends a response to the merchants point of sale machine to verify that the transaction was made or that it failed.

Ref: https://support.google.com/androidpay/merchant/answer/6345242?hl=en
    </string>
    <string name="ok_message">Confirm Order</string>
    <string name="map_key">AIzaSyBZlZaNQsoeWcwVnYfImRmyz4C4crsOxUs</string>
    <string name="share">Share Receipt</string>
    <string name="client_id">800031691648-u2d7olk9vkm8cmvug00iakudr4uf462l.apps.googleusercontent.com</string>
</resources>


